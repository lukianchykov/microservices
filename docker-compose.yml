services:
  mysql-customer:
    image: mysql:latest
    hostname: mysql
    restart: always
    environment:
      MYSQL_ROOT_USER: root
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: customer
    ports:
      - "3308:3306"
    volumes:
      - mysql-customer:/var/lib/mysql
  mysql-fraud:
    image: mysql:latest
    hostname: mysql
    restart: always
    environment:
      MYSQL_ROOT_USER: root
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: fraud
    ports:
      - "3307:3306"
    volumes:
      - mysql-fraud:/var/lib/mysql
#   zipkin:
#     image: openzipkin/zipkin
#     container_name: zipkin
#     ports:
#       - "9411:9411"
#     networks:
#       - spring
#   rabbitmq:
#     image: rabbitmq:3.9.11-management-alpine
#     container_name: rabbitmq
#     ports:
#       - "5672:5672"
#       - "15672:15672"
#     networks:
#       - spring
# #  eureka-server:
# #    image: microservices/eureka-server:latest
# #    container_name: eureka-server
# #    ports:
# #      - "8761:8761"
# #    environment:
# #      - SPRING_PROFILES_ACTIVE=docker
# #    networks:
# #      - spring
# #    depends_on:
# #      - zipkin
# #  apigw:
# #    image: microservices/apigw:latest
# #    container_name: apigw
# #    ports:
# #      - "8083:8083"
# #    environment:
# #      - SPRING_PROFILES_ACTIVE=docker
# #    networks:
# #      - spring
# #    depends_on:
# #      - zipkin
# #      - eureka-server
#   customer:
#     image: microservices/customer:latest
#     container_name: customer
#     ports:
#       - "8080:8080"
#     environment:
#       - SPRING_PROFILES_ACTIVE=docker
#     networks:
#       - spring
#       - postgres
#     depends_on:
#       - zipkin
#       - postgres
#       - rabbitmq
#   fraud:
#     image: microservices/fraud:latest
#     container_name: fraud
#     ports:
#       - "8081:8081"
#     environment:
#       - SPRING_PROFILES_ACTIVE=docker
#     networks:
#       - spring
#       - postgres
#     depends_on:
#       - zipkin
#       - postgres
#       - rabbitmq
#   notification:
#     image: microservices/notification:latest
#     container_name: notification
#     ports:
#       - "8082:8082"
#     environment:
#       - SPRING_PROFILES_ACTIVE=docker
#     networks:
#       - spring
#       - postgres
#     depends_on:
#       - zipkin
#       - postgres
#       - rabbitmq
networks:
  mysql:
    driver: bridge
#   spring:
#     driver: bridge

volumes:
  mysql-customer:
  mysql-fraud: